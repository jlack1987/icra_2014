\section{Optimization}
This section presents the formulation of an optimization problem which yields controller parameters for the three domain gait of interest. The objective function of this optimization is a least squares fit of controller outputs to corresponding outputs computed on human locomotion data. More novel to this paper, however, is the construction of equality and inequality constraints that--when satisfied--yield periodic, three-domain walking. Previous results using partial hybrid zero dynamics are leveraged.  \textit{Motion Transitions} REFERENCE are used to compute the controller parameters for full actuation, $\indexbyfullactuation{\param}$, and under actuation, $\indexbyunderactuation{\param}$. State reconstruction on a partial hybrid zero dynamics surface REFERENCE is used to compute various physical constraints on the controllers, e.g. torque and reaction force constraints which ensure the controllers are realizable on the robot hardware.

\newsec{Partial Hybrid Zero Dynamics}
For the continuous dynamics of multi-domain hybrid systems, the goal of the control law in EQREF is to drive the dynamics of the system to the
\textit{zero dynamics manifold}:
\begin{align}
 \nonumber
\ZeroDynamics_{\indexbyvertex{\param}} = \{(\q,\dq) \in \ConfigurationSpace :  \hspace{1mm} &\yone(\q,\dq) = 0, \\&
\ytwo(\q) = \mathbf{0}, \ydottwo(\q,\dq) = \mathbf{0}\}
\label{eq:ZD}
\end{align}
where $\yone(\q,\dq)$ and $\ytwo(\q,\dq)$ are a set of relative degree one and two outputs. The following is a Partial Zero Dynamics Surface
\begin{align}
\label{PZD}
\PartialZeroDynamics_{\indexbyvertex{\param}} = \{(\q,\dq) \in \ConfigurationSpace : \ytwo(\q) = \mathbf{0}, \ydottwo(\q,\dq) = \mathbf{0}\}
\end{align}
This motivates the notion of a \textit{partial hybrid zero dynamics} on a cycle:
\begin{align}
\label{PZD}
\forall \hspace{1mm} \edge \in \EdgeSet, \hspace{3mm} \indexbyedge{\resetmap} ( \indexbyedge{\guard} \cap \PartialZeroDynamics_{\param_\sore} ) \subset \PartialZeroDynamics_{\param_\tare}
\end{align}

\newsec{Motion Transitions.} It was shown in REF that we can connect any two PHZD surfaces together with the ECWF to ensure that partial hybrid zero dynamics is maintained, i.e. there is a closed form expression for parameters of the ECWF that yield a PHZD surface connecting two other PHZD surfaces. Let $(\q^{\sore}, \dq^{\sore}) \in \PartialZeroDynamics_{\param_{\sore}}$ and $(\q^{\tare}, \dq^{\tare}) \in \PartialZeroDynamics_{\param_{{\tare}}}$ be points in two partial zero dynamics surfaces. These are the conditions needed to solve for controller parameters $\tilde{\param}$ corresponding to a motion transition from $(\q^{\sore}, \dq^{\sore})$ to  $(\q^{\tare}, \dq^{\tare})$:
\begin{align}
\label{eq:transitionsource}
 \left[ \begin{array} {c} y^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\sore}),\paramtransition_i) = y^d_{2,{\sore}}(\timeparameterization_{\sore}(\q^{\sore}),\param_{\sore,i}) \\
 {\dot y}^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\sore}),\paramtransition_i) ={\dot y}^d_{2,{\sore}}(\timeparameterization_{\sore}(\q^{\sore}),\param_{\sore,i})\end{array} \right]_{\forall i \in \OutputSet_{\tare}}
\end{align}
and
\begin{align}
\label{eq:transitiontarget}
 \left[ \begin{array} {c} y^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\tare}),\paramtransition_i) = y^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\tare}),\param_{\tare,i}) \\
 {\dot y}^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\tare}),\paramtransition_i) = {\dot y}^d_{2,{\tare}}(\timeparameterization_{\tare}(\q^{\tare}),\param_{\tare,i})\end{array} \right]_{\forall i \in \OutputSet_{\tare}}
\end{align}
%HERE IS AN ALTERNATE EXPRESSION FOR A MOTION TRANSITIONS (FAIL)
%\begin{mydefinition}
%Controller parameters $\tilde{\param}$ of the extended canonical walking function are said to form a \textit{Motion Transition} from $x_1 = (\q_1^T,\dq_1^T)^T$ to  $x_2 = (\q_2^T,\dq_2^T)^T $ REF if
%\begin{align}
%\exists \tilde{\param} \st &  \:\: \nonumber \\
% (\q_1^T,\dq_1^T)^T  &\in \PartialZeroDynamics_{\tilde{\param}} \\
% (\q_2^T,\dq_2^T)^T  &\in \PartialZeroDynamics_{\tilde{\param}}
%\end{align}
%\end{mydefinition}

\newsec{Inverse Kinematics.} We use the method found in REF, to compute a point $\thetaalpha \in \indexbyrobot{\ConfigurationSpace}$ on the guard from the underactuated phase to the double support phase, $S_{ua \to oa}$. We use the facts that on a partial hybrid zero dynamics surface $\yatwo = \ydtwo$ and on $S_{ua \to oa}$, both the stance heel and the nonstance toe must be on the ground. The point is obtained using
\begin{eqnarray}
\label{eq:inverse}
\thetaalpha = \q \st
\left[ \begin{array}{c}
\ytwods(\resetmap_{ua \to oa} \q) \\
\indexbydoublesupport{\unilateral}(\q)
\end{array}
\right] =
\left[ \begin{array}{c}
\zm_4 \\
0
\end{array}
\right],
\end{eqnarray}
where $\resetmap_{ua \to oa} $ is the reset map from the underactuated domain to the double support domain. Using $\thetaalpha$, we can explicitly solve for a point $(\thetaalpha, \thetaalphadot) \in \ZeroDynamics_{\indexbydoublesupport{\param}} \cap \indexbydoublesupport{\guard}$. 
%
%In particular, the velocities, $\thetaalphadot$ are obtained through
%\begin{align}
%\label{eq:inverse_dot}
%\thetaalphadot = \left[ \begin{array}{c} \indexbyvertex{\dyonedq} \\ \indexbyvertex{\dytwodq} \end{array} \right]^{-1} \left( \begin{array}{c} \vhip \\ \zm \end{array} \right).
%\end{align}


\newsec{PHZD State Reconstruction.} As claimed in REF, states on a partial hybrid zero dynamics surface can be obtained as functions of the linearized position of the hip. Using equations REF for underactuation and REF for full actuation, define the following states obtained through PHZD reconstruction. It follows that for $\q  = \qreconstruction(\xi_{1,\vertex})$ and $\dq  = \dqreconstruction(\xi_{1,\vertex})\xi_{2,\vertex}$, the point $(\q, \dq) \in \PartialZeroDynamics_{\param_{\vertex}}$. Furthermore, this method can be used to compute states at \textit{any} value of $\xi_{1,\vertex}$; in the proceeding sections we take advantage of this fact to specify values of $\xi_{1,\vertex}$ at which to transition from one domain to another. Let $\beta_1$ be a \textit{transition point} from the over actuated domain to the fully actuated domain, such that $(\qreconstruction(\beta_1),\dqreconstruction(\beta_1)) \in \guard_{oa \to fa}$ and likewise, let $\beta_2$ be a transition point from the fully actuated domain to the under actuated domain, such that $(\qreconstruction(\beta_2),\dqreconstruction(\beta_2)) \in \guard_{fa \to ua}$.

%\begin{align}
%\qreconstruction(\xi_{1,\vertex}) &= \left[ \begin{array}{c} \indexbyvertex{\dyonedq} \\ \indexbyvertex{\dytwodq} \end{array} \right]^{-1} \left( \begin{array}{c} \xi_{1,\vertex} \\ \ydtwo (\xi_{1,\vertex}) \end{array} \right)\\
%\dqreconstruction(\xi_{1,\vertex}) &= \left[ \begin{array}{c} \indexbyvertex{\dyonedq} \\ \indexbyvertex{\dytwodq} \end{array} \right]^{-1} \left( \begin{array}{c} 1 \\ \frac{\partial \ydtwo (\xi_{1,\vertex})}{\partial \xi_{1,\vertex}} \end{array} \right)
%\end{align}



\newsec{Optimization Cost.}
The objective function of this optimization is a least squares fit of controller outputs to corresponding outputs computed on human locomotion data, over all three domains. The controller parameters for the full actuation, $\indexbyfullactuation{\param}$, and the under actuation, $\indexbyunderactuation{\param}$, domains are obtained through motion transitions, specifically \eqref{eq:transitionsource} and \eqref{eq:transitiontarget}. The human data, with discrete times $t^H[k]$ and values for outputs, $y^H_i[k]$, is indexed by a set $K$, where $k \in \{1, \ldots, K\}$ represents indices for discrete data points, and $t^H[k] < t^H[k+1] \forall k \in K$. Let $K_{\beta_1}$ denote the time corresponding to a transition from $oa \to fa$ and $K_{\beta_2}$ denote the time corresponding to a transition from $fa \to ua$. For each relative degree two output, $i \in \OutputSet_v$ for a given domain, $\vertex \in \VertexSet$, the value of the output is denoted $y^d_i(t^H[k],\param_{v,i})$  . The total cost is the sum of the costs of each domain, which can be stated as follows
\begin{align}
\nonumber
\costoa(\indexbydoublesupport{\param} ) =  \sum_{k = 1}^{K_{\beta_1}} \sum_{i \in \OutputSet_{oa}} \left( y^H_i[k] - y^d_i(t^H[k],\param_{oa,i}) \right)^2
\end{align}
\begin{align}
\nonumber
\costfa(\indexbydoublesupport{\param} ) =  \sum_{k = K_{\beta_1}}^{K_{\beta_2}} \sum_{i \in \OutputSet_{fa}} \left( y^H_i[k] - y^d_i(t^H[k],\tilde{\param}_{(fa,i)}(\param_{oa}) \right)^2
\end{align}
\begin{align}
\nonumber
\costua(\indexbydoublesupport{\param} ) =  \sum_{k = K_{\beta_2}}^{K} \sum_{i \in \OutputSet_{ua}} \left( y^H_i[k] - y^d_i(t^H[k],\tilde{\param}_{(ua,i)}(\param_{oa})  \right)^2
\end{align}
\begin{align}
\label{eq:HDBC}
\HDBC(\indexbydoublesupport{\param} ) =  \costoa(\indexbydoublesupport{\param} ) + \costfa(\indexbydoublesupport{\param} )+ \costua(\indexbydoublesupport{\param} )
\end{align}
which quantifies the similarity between the human and the robot outputs.



\newsec{Optimization Problem Statement.} The goal of \textit{human-inspired PHZD optimization} is to find parameters $\indexbydoublesupport{\param^*}$ that solve the following constrained optimization problem:
\begin{align}
\label{eq:PHZDopt}
\tag{HIO}
(\indexbydoublesupport{\param}^*, \beta^*) = \underset{(\indexbydoublesupport{\param}, \beta)  \in \Reals^{21} \times \Reals^{2} }{\operatorname{argmin}} &  \:\: \HDBC(\indexbydoublesupport{\param} )  \\
%\tag{C}
\st &  \:\: \nonumber \\
\label{eq:C1}
\tag{C1}
\resetmap_{fa \to oa} ( \guard_{fa \to oa} \cap \PartialZeroDynamics_{\tilde{\param}_{fa}(\param_{oa}, \beta)} ) &\subset \PartialZeroDynamics_{\param_{oa}} \\
\label{eq:C2}
\tag{C2}
\resetmap_{oa \to ua} ( \guard_{oa \to ua} \cap \PartialZeroDynamics_{\param_{oa}} ) &\subset \PartialZeroDynamics_{\tilde{\param}_{ua}(\param_{oa}, \beta)}  \\
\label{eq:C3}
\tag{C3}
\resetmap_{ua \to fa} ( \guard_{ua \to fa} \cap \PartialZeroDynamics_{\tilde{\param}_{ua}(\param_{oa}, \beta)} ) &\subset \PartialZeroDynamics_{\tilde{\param}_{fa}(\param_{oa}, \beta)} \\
\label{eq:C4}
\tag{C4}
(\qreconstruction (\beta_1), \dqreconstruction (\beta_1)) &\in \guard_{oa \to fa} \\
\label{eq:C5}
\tag{C5}
(\qreconstruction (\beta_2), \dqreconstruction (\beta_2)) &\in \guard_{fa \to ua} \\
\label{eq:C6}
\tag{C6}
\indexbydoublesupport{\ConstraintMatrix}(\qreconstruction (\xi_{1,oa}),\dqreconstruction (\xi_{1,oa}), \indexbydoublesupport{\control}) &\geq 0 \\
\label{eq:C7}
\tag{C7}
\indexbyfullactuation{\ConstraintMatrix}(\qreconstruction (\xi_{1,fa}),\dqreconstruction (\xi_{1,fa}), \indexbyfullactuation{\control}) &\geq 0 \\
\label{eq:C8}
\tag{C8}
\indexbyunderactuation{\ConstraintMatrix}(\qreconstruction (\xi_{1,ua}),\dqreconstruction (\xi_{1,ua}), \indexbyunderactuation{\control}) &\geq 0
\end{align}
with $\HDBC$ the cost given in EQREF.

\begin{algorithm}
\caption{Algorithm for obtaining controller parameters for a three-domain locomotion gait.}
%The optimization procedure follows:
\begin{itemize}[\setlabelwidth{Step 1}]
\item[Step 1)] Guess values for the controller parameters, $\param_{oa}$, and the domain transition points, $\beta$.
\item[Step 2)] Solve the inverse kinematics problem, yielding $(\thetaalpha, \thetaalphadot)$-- the initial condition to the double support domain on the partial hybrid zero dynamics surface.
\item[Step 3)] Compute the state reconstruction for the double support domain and use this reconstruction to compute inequality constraints \eqref{eq:C6} on the domain of admissibility $\domain_{oa}$ for double support.
\item[Step 4)] Compute the state reconstruction at the first transition point, $\xi_{1,oa} = \beta_1$, and use this point to compute equality \eqref{eq:C4} constraints on the guard from double support to full actuation, $\guard_{oa \to fa}$.
\item[Step 5)] Compute parameters for the full actuation domain, $\tilde{\alpha}_{fa}$, that construct a motion transition EQREF from $(\qreconstruction (\beta_1),\dqreconstruction (\beta_1),\param_{fa}) \to (\thetaalpha, \thetaalphadot)$ .
\item[Step 6)] Compute the state reconstruction for the full actuation domain and use this reconstruction to compute inequality constraints \eqref{eq:C7} on the domain of admissibility $\domain_{fa}$ for full acutation.
\item[Step 7)] Compute the state reconstruction at the second transition point,  $\xi_{1,fa} = \beta_2$,  and use this point to compute equality \eqref{eq:C5} constraints on the guard from full actuation to under actuation, $\guard_{fa \to ua}$.
\item[Step 8)] Compute parameters for the under actuation domain, $\tilde{\alpha}_{ua}$, that construct a motion transition EQREF from $(\qreconstruction (\beta_2),\dqreconstruction (\beta_2),\param_{ua}) \to (\thetaalpha, \thetaalphadot)$.
\item[Step 9)] Integrate through the underactuated domain to compute inequality constraints \eqref{eq:C8} on the domain of admissibility $\domain_{ua}$ for under actuation.
\item[Step 10)] Compute $\HDBC(\param_{oa})$
\item[Step 11)] Nonlinear optimization methods to update Guess values for $\param_{oa}$ and $\beta$ based on values for the cost: $\HDBC(\param_{oa})$ and constraints: \eqref{eq:C1}--\eqref{eq:C8}.
\item[Step 12)] Repeat until local minimum reached, yielding optimal controller parameters, $\param_{oa}^*$, and domain transition points, $\beta^*$.
\end{itemize}
\end{algorithm}

